{"ast":null,"code":"var _jsxFileName = \"/Users/marvinren/Desktop/portfolio-react 4.14.56 AM/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    name,\n    email,\n    message\n  } = formState;\n\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid); // isValide conditional statement\n\n      if (!isValid) {\n        setErrorMessage('Your email is invalid');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required`);\n        console.log(setErrorMessage);\n      } else {\n        setErrorMessage('');\n      }\n    }\n\n    if (!errorMessage) {\n      //spread operator used to retain the other key-value pairs in this object, and only assign the value for formState.name\n      setFormState({ ...formState,\n        [e.target.name]: e.target.value\n      }); //e.target.name is the Name attribute(email, name...), but name is the name attribute with the name value\n      // console.log(\"form:\", [e.target.name])\n      // console.log('errorMessage', errorMessage)\n    }\n\n    console.log(\"errorMessage: \", errorMessage);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"h1tag\",\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          defaultValue: name,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email addess:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          defaultValue: email,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          rows: \"5\",\n          defaultValue: message,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        \"data-testid\": \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"LaVHGFZJ+asK38p4gWOcbBSDqvM=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/marvinren/Desktop/portfolio-react 4.14.56 AM/src/components/Contact/index.js"],"names":["React","useState","validateEmail","ContactForm","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; \nimport { validateEmail } from '../../utils/helpers';\n\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({name: '', email:'', message:''});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { name, email, message } = formState;\n\n    function handleChange(e) {\n        if(e.target.name === 'email')  {\n            const isValid = validateEmail(e.target.value)\n            console.log(isValid);\n            // isValide conditional statement\n            if(!isValid) {\n                setErrorMessage('Your email is invalid');\n            } else {\n                setErrorMessage('')\n            }\n        } else {\n            if(!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required`);\n                console.log(setErrorMessage)\n            } else {\n                setErrorMessage('')\n            }\n        }\n        if(!errorMessage) {\n        //spread operator used to retain the other key-value pairs in this object, and only assign the value for formState.name\n        setFormState({...formState, [e.target.name]: e.target.value})\n        //e.target.name is the Name attribute(email, name...), but name is the name attribute with the name value\n        // console.log(\"form:\", [e.target.name])\n        // console.log('errorMessage', errorMessage)\n        } \n        console.log(\"errorMessage: \",errorMessage)\n      \n    }\n  \n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\nreturn (\n    <section>\n        <h1 data-testid=\"h1tag\">Contact me</h1>\n        <form id=\"contact-form\" onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor =\"name\">Name:</label>\n                <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange}/>\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email addess:</label>\n                <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange}/>\n            </div>\n            <div>\n                <label htmlFor=\"message\">Message:</label>\n                <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange}/>\n            </div>\n            {errorMessage && (\n            <div>\n                <p className=\"error-text\">{errorMessage}</p>\n            </div>\n            )}\n            <button type=\"submit\" data-testid=\"button\" >Submit</button>\n        </form>\n    </section>\n)\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}